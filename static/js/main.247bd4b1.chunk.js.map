{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.247bd4b1.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Form = ({ setInputText, inputText, todos, setTodos, setStatus, }) => {\n    //Here JS can be written\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value)\n    };\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, \n            {   text: inputText, completed: false, id: Math.random() * 1000 }\n        ]);\n        setInputText(\"\");\n    };\n    const statusHandler = (e) => {\n      setStatus(e.target.value)\n    };\n    return (\n        <form>\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    //Events\n    const deleteHandler = () => {\n        setTodos(todos.filter(el => el.id !== todo.id))\n    };\n    const completeHandler = () => {\n        setTodos(\n            todos.map((item) => {\n                if(item.id === todo.id) {\n                    return {\n                        ...item, completed: !item.completed\n                    };\n                }\n                return item;\n            })\n        );\n    };\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}> {text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\"> \n                <i className=\"fas fa-check\"> </i> \n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\"> \n                <i className=\"fas fa-trash\"> </i>\n            </button>\n        </div>\n    );\n};\n\nexport default Todo;","import React from \"react\";\n//Import components\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos}) => {\n    \n    return (\n        <>\n        <div className =\"todo-container\">\n            <ul className=\"todo-list\">\n                {}\n                {filteredTodos.map((todo) => (\n                   <Todo \n                    todos={todos} \n                    key={todo.id} \n                    text={todo.text} \n                    todo={todo}\n                    setTodos={setTodos} \n                    />  \n                ))}\n            </ul>\n        </div>\n        </>\n    );\n};\n\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n//Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //Run once on app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //funk\n  const filterHandler = () => {\n    switch(status){\n      case 'completed' :\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default: setFilteredTodos(todos);    \n        break;\n    }\n  };\n\n  //Save to local\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') ===null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n     let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n     setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header> \n        <h1> Josh's Todo</h1>\n      </header>\n      <Form \n        todos={todos} \n        inputText={inputText} \n        setTodos={setTodos} \n        setInputText={setInputText} \n        setStatus={setStatus}\n      />\n      <TodoList \n        setTodos={setTodos} \n        todos={todos} \n        filteredTodos={filteredTodos} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}